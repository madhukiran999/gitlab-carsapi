{
	"info": {
		"_postman_id": "8c8b9fd1-1591-4d23-aa1a-43dc05d14bde",
		"name": "Cars API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32065417"
	},
	"item": [
		{
			"name": "CRUD",
			"item": [
				{
					"name": "Get all cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add car",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"manufacturer\": \"Dacia\",\n    \"model\": \"Logan\",\n    \"build\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single car",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cars",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete car",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cars",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Statistics",
			"item": [
				{
					"name": "Average fleet age",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/statistics/age",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"statistics",
								"age"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>Version</th>\r",
									"        <th>Commit</th>\r",
									"        <th>Branch</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.app.version}}</td>\r",
									"        <td>{{response.app.commit}}</td>\r",
									"        <td>{{response.app.branch}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return {response: pm.response.json()}\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());\r",
									"pm.environment.get(\"variable_key\");\r",
									"pm.globals.get(\"variable_key\");\r",
									"pm.variables.get(\"variable_key\");\r",
									"pm.environment.set(\"variable_key\", \"variable_value\");\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{baseUrl}}/actuator/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"info"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}